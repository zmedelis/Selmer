;; to run the tests, use: clojure -T:build test
;; - that compiles selmer.node prior to running tests but that isn't strictly
;;   necessary, and you can run basic tests with: clojure -X:dev:test

;; to run a basic development REPL, use: clj -A:dev
;; to run a development REPL with tests available, use: clj -A:dev:test

;; to AOT-compile selmer.node, prior to working, use: clojure -T:build prep

;; to get help for the build.clj script, use: clojure -T:build:deps help/doc :ns build

{:paths ["src" "resources" "target/classes"]

 :deps/prep-lib ; allow for use via git deps: clojure -X:deps prep
 ;; see https://clojure.org/guides/deps_and_cli#prep_libs for more detail
 {:alias  :build
  :fn     prep
  :ensure "target/classes"}

 :aliases
 {:build
  {:deps       {io.github.clojure/tools.build {:git/tag "v0.9.5" :git/sha "24f2894"}
                slipset/deps-deploy           {:mvn/version "0.2.1"}}
   :ns-default build}

  :dev
  {:extra-paths ["dev"]
   :extra-deps  {json-html/json-html         {:mvn/version "0.4.7"}
                 cheshire/cheshire           {:mvn/version "5.11.0"}
                 environ/environ             {:mvn/version "1.2.0"}
                 org.clojure/tools.namespace {:mvn/version "1.3.0"}}}

  :test
  {:extra-paths ["test"]
   :extra-deps  {io.github.cognitect-labs/test-runner
                 {:git/tag "v0.5.1" :git/sha "dfb30dd"}

                ;; test dependencies
                 criterium/criterium {:mvn/version "0.4.6"}}
   :exec-fn cognitect.test-runner.api/test}

  :neil
  {:project {:name    io.github.zmedelis/selmer
             :version "0.7.9"}}}}
